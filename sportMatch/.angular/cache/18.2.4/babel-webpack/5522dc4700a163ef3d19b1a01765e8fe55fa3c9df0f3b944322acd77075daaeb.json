{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isAuthenticated = false;\n  }\n  login() {\n    this.isAuthenticated = true;\n  }\n  logout() {\n    this.isAuthenticated = false;\n  }\n  getAuthStatus() {\n    return this.isAuthenticated;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","isAuthenticated","login","logout","getAuthStatus","_","_2","factory","ɵfac","providedIn"],"sources":["M:\\Git Portafolio\\Portafolio\\sportMatch\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n\r\n  constructor() { }\r\n  login() {\r\n    this.isAuthenticated = true;\r\n  }\r\n\r\n  logout() {\r\n    this.isAuthenticated = false;\r\n  }\r\n\r\n  getAuthStatus() {\r\n    return this.isAuthenticated;\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAGtBC,YAAA;IAFQ,KAAAC,eAAe,GAAG,KAAK;EAEf;EAChBC,KAAKA,CAAA;IACH,IAAI,CAACD,eAAe,GAAG,IAAI;EAC7B;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACF,eAAe,GAAG,KAAK;EAC9B;EAEAG,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,eAAe;EAC7B;EAAC,QAAAI,CAAA,G;qCAdUN,WAAW;EAAA;EAAA,QAAAO,EAAA,G;WAAXP,WAAW;IAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}